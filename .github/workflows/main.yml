# This is a basic workflow to help you get started with Actions

name: Android CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# env:
#   APK_FILE_PATH: android/app/build/outputs/apk/release
#   APK_FILE_NAME: app-release.apk

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  # log-github-event-goodies:
  #   name: "LOG Everything on GitHub Event"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Logging
  #       run: |
  #         echo "${{toJSON(github.event)}}"
  #         echo "::set-output name=message::${{github.event.head_commit.message}}"
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    # - name: set up NDK
    #   uses: ravinderjangra/android-ndk-toolchain-setup@0.2
    #   with:
    #     api: '21'
    #     arch: 'arm'
    #     install-location: 'toolchains'

    - name: Grant execute lint 
      run: chmod +x gradlew
    - name: Check lint with Gradle
      run: ./gradlew lint
    
    - name: Update gradle version for Android
      if: contains(steps.commit_message.outputs.message, '[SEBP]')
      uses: damienaicheh/update-android-version-gradle-action@v1.0.0
      with:
        build-gradle-path: '${{ github.workspace }}/app/build.gradle'
        version-code: ${{ env.NUMBER_OF_COMMITS }}
        version-name: '${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}'
        print-file: true
 
    - name: Get latest commit message
      id: commit_message
      run: |
        echo "${{ github.event.head_commit.message }}"
        echo "::set-output name=message::${{ github.event.head_commit.message }}"

    - name: Build with Gradle
      if: contains(steps.commit_message.outputs.message, '[SEBP]')
      run: |
        ./gradlew assembleRelease
    # - uses: actions/checkout@v1
    #   id: cache
    #   with:
    #     path: ~/local/rubies
    #     key: ruby-2.6.5
    #     clean: false
        
    # - name: install fir.im
    #   run: sudo gem install fir-cli
    # - name: Upload to Fir.im
    #   run: fir login ${{ secrets.FIRTOKEN }}
    # - run: fir publish  app/build/outputs/apk/release/app-release.apk
    - name: Upload apk to Pgyer
      #GitHub 工作空间目录路径，初始为空白。 例如 /home/runner/work/my-repo-name/my-repo-name。 actions/checkout 操作将在此目录内检出文件，默认情况下是仓库的副本。
      if: contains(steps.commit_message.outputs.message, '[SEBP]')
      run: |
        curl -F 'file=@${{ github.workspace }}/app/build/outputs/apk/release/app-release-unsigned.apk' -F '_api_key=${{secrets.PGYER_API_KEY}}' https://www.pgyer.com/apiv2/app/upload

    - name: Send custom JSON data to Slack workflow
      id: slack
      if: contains(steps.commit_message.outputs.message, '[SEBP]')
      uses: slackapi/slack-github-action@v1.16.0
      with:
        payload: "{\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"You have a new request: \"}},{\"type\":\"section\",\"fields\":[{\"type\":\"mrkdwn\",\"text\":\"*Type:* Computer (laptop)\"},{\"type\":\"mrkdwn\",\"text\":\"*When:* Submitted Aut 10\"}]}]}"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
